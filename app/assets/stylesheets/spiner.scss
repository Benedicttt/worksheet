.lds-hourglass {
  display: inline-block;
  position: fixed;
  width: 120px;
  height: 120px;
  z-index: 1051;
  left: 50%;
  margin-top: 30em;

}
.lds-hourglass:after {
  content: " ";
  display: block;
  border-radius: 50%;
  width: 0;
  height: 0;
  margin: 8px;
  box-sizing: border-box;
  border: 50px solid #fff;
  border-color: #fff transparent #fff transparent;
  animation: lds-hourglass 1.1s infinite;
}
@keyframes lds-hourglass {
  0% {
    transform: rotate(0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }
  50% {
    transform: rotate(900deg);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  100% {
    transform: rotate(1800deg);
  }
}




//.wrapper {
//  position: absolute;
//  width: 20%;
//  height: 15px;
//  left: 0;
//  right: 0;
//  z-index: 200;
//  bottom: 0;
//  top: 0;
//  margin: auto;
//}
//
//.loader {
//  height: 100%;
//  display: -webkit-box;
//  display: flex;
//  -webkit-transform: translateZ(0);
//  transform: translateZ(0);
//}
//.loader div {
//  -webkit-box-flex: 100;
//  flex: 30;
//  background: salmon;
//  -webkit-animation: go 0.8s infinite alternate ease;
//  animation: go 0.8s infinite alternate ease;
//  box-shadow: 0 0 100px salmon;
//}
//.loader div:nth-child(1) {
//  -webkit-animation-delay: -0.72s;
//  animation-delay: -0.72s;
//}
//.loader div:nth-child(2) {
//  -webkit-animation-delay: -0.64s;
//  animation-delay: -0.64s;
//}
//.loader div:nth-child(3) {
//  -webkit-animation-delay: -0.56s;
//  animation-delay: -0.56s;
//}
//.loader div:nth-child(4) {
//  -webkit-animation-delay: -0.48s;
//  animation-delay: -0.48s;
//}
//.loader div:nth-child(5) {
//  -webkit-animation-delay: -0.4s;
//  animation-delay: -0.4s;
//}
//.loader div:nth-child(6) {
//  -webkit-animation-delay: -0.32s;
//  animation-delay: -0.32s;
//}
//.loader div:nth-child(7) {
//  -webkit-animation-delay: -0.24s;
//  animation-delay: -0.24s;
//}
//.loader div:nth-child(8) {
//  -webkit-animation-delay: -0.16s;
//  animation-delay: -0.16s;
//}
//.loader div:nth-child(9) {
//  -webkit-animation-delay: -0.08s;
//  animation-delay: -0.08s;
//}
//.loader div:nth-child(10) {
//  -webkit-animation-delay: 0s;
//  animation-delay: 0s;
//}
//
//@-webkit-keyframes go {
//  100% {
//    background: transparent;
//    -webkit-box-flex: 10;
//    flex: 10;
//    box-shadow: 0 0 0 transparent;
//  }
//}
//
//@keyframes go {
//  100% {
//    background: transparent;
//    -webkit-box-flex: 10;
//    flex: 10;
//    box-shadow: 0 0 0 transparent;
//  }
//}


$size : 15px;
$yellow_light : #FED750;
$yellow : #E6A32F;
$yellow_dark : #C87932;
$duration : 3s;

body loader1 {
  display: flex;
  justify-content: center;
  align-items: center;
  background:
    radial-gradient(

                    #333,
                    #000
    );
  transform: translateY(-$size*1.5);
}

@mixin psuedo {
  display: block;
  content: "";
}

.loader1 {
  z-index: 1052;
  position: fixed;
  left: 50%;
  margin-top: 30em;
  display: inline-flex;
  flex-wrap: wrap;
  width: $size * 3;
  height: $size * 3;
  transform-style: preserve-3d;
  transform: rotateX(45deg) rotate(45deg);
}


.box {
  position: absolute;
  top: 0;
  left: 0;
  width: $size;
  height: $size;
  background: $yellow_light;
  box-shadow: $size*4.75 $size*4.75 20px #000;
  animation: move $duration ease-in-out infinite both;
  transform-style: preserve-3d;

  @for $i from 1 through 3 {
    &:nth-child(#{$i}) {
      animation-delay: $i/2 * -$duration;
    }
  }

  &:before, &:after {
    @include psuedo;
    position: absolute;
    width: $size;
    height: $size;
  }
  &:before {
    top: 100%;
    left: 0;
    background: $yellow;
    transform-origin: center top;
    transform: rotateX(-90deg);
  }
  &:after {
    top: 0;
    left: 100%;
    background: $yellow_dark;
    transform-origin: center left;
    transform: rotateY(90deg);
  }
}

@keyframes move {
  0%, 100% { transform: none; }
  12.5% { transform: translate($size, 0); }
  25% { transform: translate($size*2, 0); }
  37.5% { transform: translate($size*2, $size); }
  50% { transform: translate($size*2, $size*2); }
  62.5% { transform: translate($size, $size*2); }
  75% { transform: translate(0, $size*2); }
  87.5% { transform: translate(0, $size); }
}